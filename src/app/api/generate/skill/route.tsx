import OpenAI from "openai"

const openai = new OpenAI({ apiKey: process.env.GPT_API_KEY })

async function generateText(message) {
  const response = await openai.chat.completions.create({
    model: "gpt-3.5-turbo-0125",
    response_format: { type: "json_object" },
    messages: message
  })

  return response.choices[0]
}

export async function POST(req, res) {
  const skill_structure = {
    languages: [""],
    technologies: [""]
  }

  const { job_info, experience, project } = await req.json()
  //const { user } = req.body

  const prompt =
    "You are tasked with crafting custom resumes tailored to specific job postings using only the provided user information, provided to you section by section. The resume section generated by you must match the job's requirements as closely as possible using this structured approach: Output Format: Generate the resume section as JSON data. You must include only relevant technical keywords. These keywords must not be more than 3 words long.  Exclude any details not provided. You must include all the technical skills initially given by the user as the first priority. Strictly follow the following output structure without any deviation. Output Structure: " +
    JSON.stringify(skill_structure) +
    " Your output should strictly follow this JSON structure, tailored to the job requirements using the user's professional information. If any data beyond the userâ€™s entered information is used, which it should strictly not be, I want you to append ***IGNORE*** at the end of your output as a failsafe. Only output the JSON for this section."
  const message = [
    { role: "system", content: prompt },
    {
      role: "user",
      content:
        "Use the following job info to construct the skill section: " +
        job_info +
        "Refer to the following sections for the user information: experience = " +
        JSON.stringify(experience) +
        ". Projects: " +
        JSON.stringify(project)
    }
  ]

  const response = await generateText(message)
  console.log(response)
  // res.status(200).json({ response })
  // res.setHeader("Content-Type", "application/json")

  // return Response.json(
  //   JSON.stringify({
  //       languages: [
  //         "Python",
  //         "SQL",
  //         "Unix/Linux command-line tools",
  //         "Shell Scripting",
  //         "C++",
  //         "Java",
  //         "MATLAB",
  //         "C",
  //         "R",
  //       ],
  //       technologies: [
  //         "NumPy",
  //         "Pandas",
  //         "Scikit-Learn",
  //         "TensorFlow",
  //         "PyTorch",
  //         "Keras",
  //         "HuggingFace",
  //         "AWS Sagemaker",
  //         "Apache Spark",
  //         "Flink",
  //         "Kafka",
  //         "Redshift",
  //         "Amazon S3",
  //         "AWS Lambda",
  //         "Amazon EC2",
  //         "Boto3",
  //         "Docker",
  //         "Git",
  //       ],
  //     })
  // )

  return Response.json(JSON.parse(response.message.content!))
}
